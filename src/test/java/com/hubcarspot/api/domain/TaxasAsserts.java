package com.hubcarspot.api.domain;

import static com.hubcarspot.api.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class TaxasAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxasAllPropertiesEquals(Taxas expected, Taxas actual) {
        assertTaxasAutoGeneratedPropertiesEquals(expected, actual);
        assertTaxasAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxasAllUpdatablePropertiesEquals(Taxas expected, Taxas actual) {
        assertTaxasUpdatableFieldsEquals(expected, actual);
        assertTaxasUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxasAutoGeneratedPropertiesEquals(Taxas expected, Taxas actual) {
        assertThat(expected)
            .as("Verify Taxas auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxasUpdatableFieldsEquals(Taxas expected, Taxas actual) {
        assertThat(expected)
            .as("Verify Taxas relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getValor()).as("check valor").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getValor()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaxasUpdatableRelationshipsEquals(Taxas expected, Taxas actual) {
        assertThat(expected)
            .as("Verify Taxas relationships")
            .satisfies(e -> assertThat(e.getInstituicao()).as("check instituicao").isEqualTo(actual.getInstituicao()));
    }
}
