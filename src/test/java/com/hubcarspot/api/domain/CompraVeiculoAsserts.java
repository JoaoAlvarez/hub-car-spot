package com.hubcarspot.api.domain;

import static com.hubcarspot.api.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class CompraVeiculoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraVeiculoAllPropertiesEquals(CompraVeiculo expected, CompraVeiculo actual) {
        assertCompraVeiculoAutoGeneratedPropertiesEquals(expected, actual);
        assertCompraVeiculoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraVeiculoAllUpdatablePropertiesEquals(CompraVeiculo expected, CompraVeiculo actual) {
        assertCompraVeiculoUpdatableFieldsEquals(expected, actual);
        assertCompraVeiculoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraVeiculoAutoGeneratedPropertiesEquals(CompraVeiculo expected, CompraVeiculo actual) {
        assertThat(expected)
            .as("Verify CompraVeiculo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraVeiculoUpdatableFieldsEquals(CompraVeiculo expected, CompraVeiculo actual) {
        assertThat(expected)
            .as("Verify CompraVeiculo relevant properties")
            .satisfies(e -> assertThat(e.getKmEntrada()).as("check kmEntrada").isEqualTo(actual.getKmEntrada()))
            .satisfies(e -> assertThat(e.getValor()).as("check valor").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getValor()))
            .satisfies(e ->
                assertThat(e.getValorEstimado())
                    .as("check valorEstimado")
                    .usingComparator(bigDecimalCompareTo)
                    .isEqualTo(actual.getValorEstimado())
            )
            .satisfies(e -> assertThat(e.getEnderecoCrlv()).as("check enderecoCrlv").isEqualTo(actual.getEnderecoCrlv()))
            .satisfies(e -> assertThat(e.getCidadeCrlv()).as("check cidadeCrlv").isEqualTo(actual.getCidadeCrlv()))
            .satisfies(e -> assertThat(e.getUfCrlv()).as("check ufCrlv").isEqualTo(actual.getUfCrlv()))
            .satisfies(e -> assertThat(e.getCpfCrlv()).as("check cpfCrlv").isEqualTo(actual.getCpfCrlv()))
            .satisfies(e -> assertThat(e.getDataCompra()).as("check dataCompra").isEqualTo(actual.getDataCompra()))
            .satisfies(e -> assertThat(e.getCondicaoPagamento()).as("check condicaoPagamento").isEqualTo(actual.getCondicaoPagamento()))
            .satisfies(e ->
                assertThat(e.getValorPago()).as("check valorPago").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getValorPago())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCompraVeiculoUpdatableRelationshipsEquals(CompraVeiculo expected, CompraVeiculo actual) {
        assertThat(expected)
            .as("Verify CompraVeiculo relationships")
            .satisfies(e -> assertThat(e.getInstituicao()).as("check instituicao").isEqualTo(actual.getInstituicao()))
            .satisfies(e -> assertThat(e.getVeiculo()).as("check veiculo").isEqualTo(actual.getVeiculo()))
            .satisfies(e -> assertThat(e.getFilial()).as("check filial").isEqualTo(actual.getFilial()));
    }
}
