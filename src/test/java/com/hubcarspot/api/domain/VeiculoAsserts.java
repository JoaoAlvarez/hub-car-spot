package com.hubcarspot.api.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VeiculoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVeiculoAllPropertiesEquals(Veiculo expected, Veiculo actual) {
        assertVeiculoAutoGeneratedPropertiesEquals(expected, actual);
        assertVeiculoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVeiculoAllUpdatablePropertiesEquals(Veiculo expected, Veiculo actual) {
        assertVeiculoUpdatableFieldsEquals(expected, actual);
        assertVeiculoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVeiculoAutoGeneratedPropertiesEquals(Veiculo expected, Veiculo actual) {
        assertThat(expected)
            .as("Verify Veiculo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVeiculoUpdatableFieldsEquals(Veiculo expected, Veiculo actual) {
        assertThat(expected)
            .as("Verify Veiculo relevant properties")
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getEspecie()).as("check especie").isEqualTo(actual.getEspecie()))
            .satisfies(e -> assertThat(e.getPlaca()).as("check placa").isEqualTo(actual.getPlaca()))
            .satisfies(e -> assertThat(e.getMarca()).as("check marca").isEqualTo(actual.getMarca()))
            .satisfies(e -> assertThat(e.getModelo()).as("check modelo").isEqualTo(actual.getModelo()))
            .satisfies(e -> assertThat(e.getAnoFabricacao()).as("check anoFabricacao").isEqualTo(actual.getAnoFabricacao()))
            .satisfies(e -> assertThat(e.getAnoModelo()).as("check anoModelo").isEqualTo(actual.getAnoModelo()))
            .satisfies(e -> assertThat(e.getCor()).as("check cor").isEqualTo(actual.getCor()))
            .satisfies(e -> assertThat(e.getCombustivel()).as("check combustivel").isEqualTo(actual.getCombustivel()))
            .satisfies(e -> assertThat(e.getCambio()).as("check cambio").isEqualTo(actual.getCambio()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getChassi()).as("check chassi").isEqualTo(actual.getChassi()))
            .satisfies(e -> assertThat(e.getRenavam()).as("check renavam").isEqualTo(actual.getRenavam()))
            .satisfies(e -> assertThat(e.getNumeroMotor()).as("check numeroMotor").isEqualTo(actual.getNumeroMotor()))
            .satisfies(e -> assertThat(e.getNumeroCambio()).as("check numeroCambio").isEqualTo(actual.getNumeroCambio()))
            .satisfies(e -> assertThat(e.getQuilometraegem()).as("check quilometraegem").isEqualTo(actual.getQuilometraegem()))
            .satisfies(e -> assertThat(e.getKmSaida()).as("check kmSaida").isEqualTo(actual.getKmSaida()))
            .satisfies(e -> assertThat(e.getCavalos()).as("check cavalos").isEqualTo(actual.getCavalos()))
            .satisfies(e -> assertThat(e.getMotorizacao()).as("check motorizacao").isEqualTo(actual.getMotorizacao()))
            .satisfies(e -> assertThat(e.getAdicional()).as("check adicional").isEqualTo(actual.getAdicional()))
            .satisfies(e ->
                assertThat(e.getDescritivoCurtoAcessorios())
                    .as("check descritivoCurtoAcessorios")
                    .isEqualTo(actual.getDescritivoCurtoAcessorios())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVeiculoUpdatableRelationshipsEquals(Veiculo expected, Veiculo actual) {
        // empty method
    }
}
