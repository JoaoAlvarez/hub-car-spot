package com.hubcarspot.api.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FilialAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilialAllPropertiesEquals(Filial expected, Filial actual) {
        assertFilialAutoGeneratedPropertiesEquals(expected, actual);
        assertFilialAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilialAllUpdatablePropertiesEquals(Filial expected, Filial actual) {
        assertFilialUpdatableFieldsEquals(expected, actual);
        assertFilialUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilialAutoGeneratedPropertiesEquals(Filial expected, Filial actual) {
        assertThat(expected)
            .as("Verify Filial auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilialUpdatableFieldsEquals(Filial expected, Filial actual) {
        assertThat(expected)
            .as("Verify Filial relevant properties")
            .satisfies(e -> assertThat(e.getNome()).as("check nome").isEqualTo(actual.getNome()))
            .satisfies(e -> assertThat(e.getTelefone()).as("check telefone").isEqualTo(actual.getTelefone()))
            .satisfies(e -> assertThat(e.getCnpj()).as("check cnpj").isEqualTo(actual.getCnpj()))
            .satisfies(e -> assertThat(e.getCep()).as("check cep").isEqualTo(actual.getCep()))
            .satisfies(e -> assertThat(e.getEndereco()).as("check endereco").isEqualTo(actual.getEndereco()))
            .satisfies(e -> assertThat(e.getBairro()).as("check bairro").isEqualTo(actual.getBairro()))
            .satisfies(e -> assertThat(e.getCidade()).as("check cidade").isEqualTo(actual.getCidade()))
            .satisfies(e -> assertThat(e.getNumero()).as("check numero").isEqualTo(actual.getNumero()))
            .satisfies(e -> assertThat(e.getUf()).as("check uf").isEqualTo(actual.getUf()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFilialUpdatableRelationshipsEquals(Filial expected, Filial actual) {
        assertThat(expected)
            .as("Verify Filial relationships")
            .satisfies(e -> assertThat(e.getInstituicao()).as("check instituicao").isEqualTo(actual.getInstituicao()));
    }
}
