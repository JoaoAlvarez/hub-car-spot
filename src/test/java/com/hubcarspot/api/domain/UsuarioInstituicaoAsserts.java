package com.hubcarspot.api.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UsuarioInstituicaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioInstituicaoAllPropertiesEquals(UsuarioInstituicao expected, UsuarioInstituicao actual) {
        assertUsuarioInstituicaoAutoGeneratedPropertiesEquals(expected, actual);
        assertUsuarioInstituicaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioInstituicaoAllUpdatablePropertiesEquals(UsuarioInstituicao expected, UsuarioInstituicao actual) {
        assertUsuarioInstituicaoUpdatableFieldsEquals(expected, actual);
        assertUsuarioInstituicaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioInstituicaoAutoGeneratedPropertiesEquals(UsuarioInstituicao expected, UsuarioInstituicao actual) {
        assertThat(expected)
            .as("Verify UsuarioInstituicao auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioInstituicaoUpdatableFieldsEquals(UsuarioInstituicao expected, UsuarioInstituicao actual) {
        assertThat(expected)
            .as("Verify UsuarioInstituicao relevant properties")
            .satisfies(e -> assertThat(e.getIdentificador()).as("check identificador").isEqualTo(actual.getIdentificador()))
            .satisfies(e -> assertThat(e.getIsMaster()).as("check isMaster").isEqualTo(actual.getIsMaster()))
            .satisfies(e -> assertThat(e.getRole()).as("check role").isEqualTo(actual.getRole()))
            .satisfies(e -> assertThat(e.getRead()).as("check read").isEqualTo(actual.getRead()))
            .satisfies(e -> assertThat(e.getWrite()).as("check write").isEqualTo(actual.getWrite()))
            .satisfies(e -> assertThat(e.getUpdate()).as("check update").isEqualTo(actual.getUpdate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUsuarioInstituicaoUpdatableRelationshipsEquals(UsuarioInstituicao expected, UsuarioInstituicao actual) {
        assertThat(expected)
            .as("Verify UsuarioInstituicao relationships")
            .satisfies(e -> assertThat(e.getInstituicao()).as("check instituicao").isEqualTo(actual.getInstituicao()));
    }
}
